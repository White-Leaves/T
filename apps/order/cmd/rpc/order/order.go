// Code generated by goctl. DO NOT EDIT.
// Source: order.proto

package order

import (
	"context"

	"gomall/apps/order/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddOrderReq      = pb.AddOrderReq
	AddOrderResp     = pb.AddOrderResp
	CreateOrderReq   = pb.CreateOrderReq
	CreateOrderResp  = pb.CreateOrderResp
	GetOrderBySnReq  = pb.GetOrderBySnReq
	GetOrderBySnResp = pb.GetOrderBySnResp
	OrderItem        = pb.OrderItem
	Orders           = pb.Orders
	OrdersReq        = pb.OrdersReq
	OrdersResp       = pb.OrdersResp

	Order interface {
		Orders(ctx context.Context, in *OrdersReq, opts ...grpc.CallOption) (*OrdersResp, error)
		CreateOrder(ctx context.Context, in *CreateOrderReq, opts ...grpc.CallOption) (*CreateOrderResp, error)
		CreateOrderCheck(ctx context.Context, in *CreateOrderReq, opts ...grpc.CallOption) (*CreateOrderResp, error)
		CreateOrderDTM(ctx context.Context, in *AddOrderReq, opts ...grpc.CallOption) (*AddOrderResp, error)
		CreateOrderDTMCancel(ctx context.Context, in *AddOrderReq, opts ...grpc.CallOption) (*AddOrderResp, error)
		GetOrderBySn(ctx context.Context, in *GetOrderBySnReq, opts ...grpc.CallOption) (*GetOrderBySnResp, error)
		RollbackOrder(ctx context.Context, in *CreateOrderReq, opts ...grpc.CallOption) (*CreateOrderResp, error)
	}

	defaultOrder struct {
		cli zrpc.Client
	}
)

func NewOrder(cli zrpc.Client) Order {
	return &defaultOrder{
		cli: cli,
	}
}

func (m *defaultOrder) Orders(ctx context.Context, in *OrdersReq, opts ...grpc.CallOption) (*OrdersResp, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.Orders(ctx, in, opts...)
}

func (m *defaultOrder) CreateOrder(ctx context.Context, in *CreateOrderReq, opts ...grpc.CallOption) (*CreateOrderResp, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.CreateOrder(ctx, in, opts...)
}

func (m *defaultOrder) CreateOrderCheck(ctx context.Context, in *CreateOrderReq, opts ...grpc.CallOption) (*CreateOrderResp, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.CreateOrderCheck(ctx, in, opts...)
}

func (m *defaultOrder) CreateOrderDTM(ctx context.Context, in *AddOrderReq, opts ...grpc.CallOption) (*AddOrderResp, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.CreateOrderDTM(ctx, in, opts...)
}

func (m *defaultOrder) CreateOrderDTMCancel(ctx context.Context, in *AddOrderReq, opts ...grpc.CallOption) (*AddOrderResp, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.CreateOrderDTMCancel(ctx, in, opts...)
}

func (m *defaultOrder) GetOrderBySn(ctx context.Context, in *GetOrderBySnReq, opts ...grpc.CallOption) (*GetOrderBySnResp, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.GetOrderBySn(ctx, in, opts...)
}

func (m *defaultOrder) RollbackOrder(ctx context.Context, in *CreateOrderReq, opts ...grpc.CallOption) (*CreateOrderResp, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.RollbackOrder(ctx, in, opts...)
}
