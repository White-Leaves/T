// Code generated by goctl. DO NOT EDIT.
// Source: product.proto

package server

import (
	"context"

	"gomall/apps/product/cmd/rpc/internal/logic"
	"gomall/apps/product/cmd/rpc/internal/svc"
	"gomall/apps/product/cmd/rpc/pb"
)

type ProductServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedProductServer
}

func NewProductServer(svcCtx *svc.ServiceContext) *ProductServer {
	return &ProductServer{
		svcCtx: svcCtx,
	}
}

func (s *ProductServer) Product(ctx context.Context, in *pb.ProductItemRequest) (*pb.ProductItem, error) {
	l := logic.NewProductLogic(ctx, s.svcCtx)
	return l.Product(in)
}

func (s *ProductServer) ProductDetail(ctx context.Context, in *pb.ProductDetailReq) (*pb.ProductDetailResp, error) {
	l := logic.NewProductDetailLogic(ctx, s.svcCtx)
	return l.ProductDetail(in)
}

func (s *ProductServer) UpdateProductStock(ctx context.Context, in *pb.UpdateProductStockReq) (*pb.UpdateProductStockResp, error) {
	l := logic.NewUpdateProductStockLogic(ctx, s.svcCtx)
	return l.UpdateProductStock(in)
}

func (s *ProductServer) CheckAndUpdateStock(ctx context.Context, in *pb.CheckAndUpdateStockReq) (*pb.CheckAndUpdateStockResp, error) {
	l := logic.NewCheckAndUpdateStockLogic(ctx, s.svcCtx)
	return l.CheckAndUpdateStock(in)
}

func (s *ProductServer) CheckProductStock(ctx context.Context, in *pb.UpdateProductStockReq) (*pb.UpdateProductStockResp, error) {
	l := logic.NewCheckProductStockLogic(ctx, s.svcCtx)
	return l.CheckProductStock(in)
}

func (s *ProductServer) RollbackProductStock(ctx context.Context, in *pb.UpdateProductStockReq) (*pb.UpdateProductStockResp, error) {
	l := logic.NewRollbackProductStockLogic(ctx, s.svcCtx)
	return l.RollbackProductStock(in)
}

func (s *ProductServer) DecrStock(ctx context.Context, in *pb.DecrStockReq) (*pb.DecrStockResp, error) {
	l := logic.NewDecrStockLogic(ctx, s.svcCtx)
	return l.DecrStock(in)
}

func (s *ProductServer) DecrStockCancel(ctx context.Context, in *pb.DecrStockReq) (*pb.DecrStockResp, error) {
	l := logic.NewDecrStockCancelLogic(ctx, s.svcCtx)
	return l.DecrStockCancel(in)
}
